{"version":3,"sources":["pages/index.tsx","pages/lookup.tsx","kenall.ts","pages/reverse-lookup.tsx","context.ts","pages/houjinbangou.tsx","App.tsx","index.tsx"],"names":["Index","className","href","SENTINEL","data","apiBaseUrl","process","REACT_APP_KENALL_API_BASE_URL","api","KENALL","apibase","timeout","canonicalizePostalCode","postalCode","replace","c","String","fromCharCode","charCodeAt","getAddresses","cache","a","undefined","k","length","candidates","getAddress","countVariations","items","callback","variations","Indicator","Form","timerRef","React","useRef","useForm","getValues","setValue","register","watch","reset","handleSubmit","useState","timerRunning","setTimerRunning","watchFields","useEffect","current","window","clearTimeout","prefecture","city","address1","address2","then","canonical","setTimeout","candidate","jisx0402","substring","addresses","address","corporation","block_lot","building","floor","elements","kyoto_street","push","town","koaza","join","buildAddressLines","onSubmit","console","log","htmlFor","id","type","minLength","maxLength","pattern","autoComplete","placeholder","required","value","onClick","Lookup","old_code","postal_code","prefecture_kana","city_kana","town_kana","town_raw","town_kana_raw","town_partial","town_addressed_koaza","town_multi","town_chome","searchAddresses","generateKeyFromOptions","options","query","limit","ReverseLookup","setAddress","setCandidates","onCandidatesRequested","result","suggestions","Error","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","e","suggestionValue","getSuggestionValue","renderSuggestion","renderSuggestionsContainer","containerProps","children","ref","restOfContainerProps","message","count","inputProps","onChange","currentTarget","BrowserConfigContext","createContext","scrollbarWidth","prefectures","text","kinds","modes","NTACorporateInfoChunk","offset","i","this","VirtualizedSearchResult","cacheSize","lru","sorted","_count","cancelables","WeakMap","canceled","chunk","ci","findIndex","item","splice","p","cancelable","get","Promise","resolve","reject","delete","set","respP","searchNTACorporateInfo","resp","purge","itemP","pointedBy","makeCancelable","s","j","d","chunkOffset","unshift","pop","kindsMap","Map","map","makeAccessor","propName","recP","rec","columns","Header","accessor","width","minWidth","defaultColumn","Cell","resolvedValue","setResolvedValue","resolved","SearchResultTable","height","onSelect","onReadyStateChange","useContext","setData","listRef","queue","fs","bags","t","enqueue","discriminator","f","bag","Math","max","forEach","fn","vResult","continuation","mf","n","nn","min","setInterval","clearInterval","scrollTo","cancelAll","useTable","useAbsoluteLayout","getTableProps","getTableBodyProps","headerGroups","rows","totalColumnsWidth","prepareRow","RenderRow","useCallback","index","style","row","getRowProps","original","cells","cell","getCellProps","render","rowContainerRef","innerRef","elem","parentNode","addEventListener","scrollLeft","headerGroup","overflow","getHeaderGroupProps","headers","column","getHeaderProps","itemCount","itemSize","Modal","showFlag","defaultParams","onCloseButtonClick","setOptions","disabled","setDisabled","Select","forwardRef","params","searchResultTableHeight","setSearchResultTableHeight","outerRef","doSetHeight","outerElemBounds","getBoundingClientRect","ResizeObserver","observe","sx","corporateName","kind","mode","buildSearchArgs","state","TextField","label","name","elemClassName","SelectField","Houjinbangou","searchParams","setSearchParams","showModalFlag","setShowModalFlag","preventDefault","values","fontSize","viewBox","marginLeft","corporate_number","post_code","prefecture_name","city_name","block_lot_num","floor_room","App","menuShown","setMenuShown","stopPropagation","to","fill","xmlns","fillRule","clipRule","path","element","Root","_scrollbarWidth","setScrollbarWidth","w","document","StrictMode","Provider","basename","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.457b6460.chunk.js","sourcesContent":["import React from 'react';\n\nconst Index: React.FunctionComponent = () => {\n  return (\n    <section className=\"flex flex-col\">\n      <header>\n        <h1 className=\"mb-5 text-3xl font-bold text-gray-500\">\n          ケンオール デモページ\n        </h1>\n      </header>\n      <main>\n        <p className=\"mb-2 hidden md:block\">\n          サイドバーからデモを選択してください。\n        </p>\n        <p className=\"mb-2 md:hidden\">\n          右上のハンバーガーメニューからデモを選択してください。\n        </p>\n        <p className=\"mb-2\">\n          このデモのソースコードは\n          <a href=\"https://github.com/ken-all/kenall-js-demo\">こちら</a>です。\n        </p>\n      </main>\n    </section>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { KENALL, Address } from '@ken-all/kenall';\n\ntype Candidates = {\n  data: Address[];\n};\n\ntype AddressForm = {\n  postal: string;\n  prefecture: string;\n  city: string;\n  address1: string;\n  address2: string;\n};\n\nconst SENTINEL: Candidates = {\n  data: [],\n};\n\nconst apiBaseUrl =\n  process.env.REACT_APP_KENALL_API_BASE_URL || 'https://api.kenall.jp/v1';\n\nconst api = new KENALL(process.env.REACT_APP_KENALL_API_KEY as string, {\n  apibase: apiBaseUrl,\n  timeout: 10000,\n});\n\nconst canonicalizePostalCode = (postalCode: string): string =>\n  postalCode\n    .replace(/-/g, '')\n    .replace(/[０１２３４５６７８９]/g, (c) =>\n      String.fromCharCode(\n        '0'.charCodeAt(0) + (c.charCodeAt(0) - '０'.charCodeAt(0))\n      )\n    );\n\nconst getAddresses = (() => {\n  const cache: { [k: string]: Candidates } = {};\n  return async (\n    postalCode: string | undefined\n  ): Promise<[string, Candidates]> => {\n    if (postalCode === undefined) {\n      return ['', SENTINEL];\n    }\n    const k = canonicalizePostalCode(postalCode);\n    if (k.length < 7) {\n      return [postalCode, SENTINEL];\n    }\n    let candidates: Candidates | undefined = cache[k];\n    if (candidates === undefined) {\n      candidates = await api.getAddress(k);\n      cache[k] = candidates;\n    }\n    return [k, candidates || SENTINEL];\n  };\n})();\n\nconst countVariations = <T extends unknown>(\n  items: Iterable<T>,\n  callback: (item: T) => any\n): number => {\n  const c: Record<any, number> = {};\n  let variations = 0;\n  for (const item of items) {\n    const k = callback(item);\n    if (c[k] === undefined) {\n      variations++;\n      c[k] = 1;\n    } else {\n      c[k]++;\n    }\n  }\n  return variations;\n};\n\nconst buildAddressLines = (addresses: Address[]): [string, string] => {\n  // 候補なしの場合\n  if (addresses.length === 0) {\n    return ['', ''];\n  } else if (addresses.length === 1) {\n    const address = addresses[0];\n    // 個別事業所番号\n    if (address.corporation) {\n      return [address.corporation.block_lot, address.building + address.floor];\n    } else {\n      // 住所の要素を組み立てる\n      const elements: string[] = [];\n      if (address.kyoto_street) {\n        elements.push(address.kyoto_street);\n      }\n      elements.push(address.town);\n      if (address.koaza) {\n        elements.push(address.koaza);\n      }\n      return [elements.join(' '), addresses[0].building + addresses[0].floor];\n    }\n  } else {\n    // 都道府県や市区町村のバリエーションが複数ある場合は\n    // 補完しても意味がないので補完は行わない\n    if (\n      countVariations(addresses, (address) => address.prefecture) > 1 ||\n      countVariations(addresses, (address) => address.city) > 1\n    ) {\n      return ['', ''];\n    }\n\n    // 町域が複数ある場合も補完しない\n    const nTowns = countVariations(addresses, (address) => address.town);\n    if (nTowns > 1) {\n      return ['', ''];\n    }\n\n    // 住所の要素を組み立てる\n    const elements: string[] = [];\n\n    const nKoazas = countVariations(addresses, (address) => address.koaza);\n    if (nKoazas === 1) {\n      const nKyotoStreets = countVariations(\n        addresses,\n        (address) => address.kyoto_street\n      );\n      if (nKyotoStreets === 1) {\n        elements.push(addresses[0].kyoto_street);\n      }\n      elements.push(addresses[0].town);\n      elements.push(addresses[0].koaza);\n    } else {\n      elements.push(addresses[0].town);\n    }\n\n    return [elements.join(' '), ''];\n  }\n};\n\nconst Indicator: React.FunctionComponent<{\n  className?: string | undefined;\n}> = ({ className }) => {\n  return (\n    <div\n      className={`overflow-hidden w-0 h-0 rounded-lg p-1 bg-red-400 animate-ping ${className}`}\n    ></div>\n  );\n};\n\nconst Form: React.FunctionComponent = () => {\n  const timerRef = React.useRef<number | undefined>(undefined);\n  const { getValues, setValue, register, watch, reset, handleSubmit } =\n    useForm<AddressForm>();\n  const [timerRunning, setTimerRunning] = React.useState<boolean>(false);\n\n  const onSubmit = (data: AddressForm) => {\n    console.log(data);\n  };\n\n  const watchFields = watch([\n    'postal',\n    'prefecture',\n    'city',\n    'address1',\n    'address2',\n  ]);\n\n  React.useEffect(() => {\n    // タイマーがすでに動いていればキャンセルする\n    if (timerRef.current !== undefined) {\n      window.clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n      setTimerRunning(false);\n    }\n    // すでに入力済みであれば何もしない\n    const [postalCode, prefecture, city, address1, address2] = watchFields;\n    if (prefecture || city || address1 || address2) {\n      return;\n    }\n    getAddresses(postalCode).then(([canonical, candidates]) => {\n      // 整形済みの値をセットする\n      setValue('postal', canonical);\n      // Promiseの後なので、watchFieldsの値は古くなっている可能性があるから\n      // 再度チェックする\n      {\n        const [prefecture, city, address1, address2] = getValues([\n          'prefecture',\n          'city',\n          'address1',\n          'address2',\n        ]);\n        if (prefecture || city || address1 || address2) {\n          return;\n        }\n      }\n      // 候補がない場合にも補完は実行しない\n      if (candidates.data.length === 0) {\n        return;\n      }\n      // ブラウザのautocompleteを邪魔しないように2秒後に補完を発動する\n      timerRef.current = window.setTimeout(() => {\n        setTimerRunning(false);\n        // 再度バリデーション\n        {\n          const [prefecture, city, address1, address2] = getValues([\n            'prefecture',\n            'city',\n            'address1',\n            'address2',\n          ]);\n          if (prefecture || city || address1 || address2) {\n            return;\n          }\n        }\n        const candidate = candidates.data[0];\n        setValue('prefecture', candidate.jisx0402.substring(0, 2));\n        setValue('city', candidate.city);\n        const [address1, address2] = buildAddressLines(candidates.data);\n        setValue('address1', address1);\n        setValue('address2', address2);\n      }, 2000);\n      setTimerRunning(true);\n    });\n    return () => {\n      if (timerRef.current !== undefined) {\n        window.clearTimeout(timerRef.current);\n      }\n    };\n  }, watchFields); /* eslint \"react-hooks/exhaustive-deps\": \"off\" */\n\n  return (\n    <>\n      <style jsx>{`\n        .form-field-main {\n          @apply md:mb-0 mb-3;\n        }\n\n        .form-field-elem {\n          @apply border-gray-300 rounded-md;\n        }\n\n        .form-label {\n          @apply md:mt-2;\n        }\n\n        .form-label.nogap {\n          @apply md:mt-0;\n        }\n\n        .form-label-main {\n          display: block;\n        }\n\n        .form-label-main.required::after {\n          @apply text-gray-500 text-xs;\n          content: '*';\n          vertical-align: super;\n        }\n\n        .form-label-aux {\n          display: block;\n          @apply text-sm;\n        }\n\n        @media (min-width: 768px) {\n          .md-form-field-horiz {\n            grid-template-columns: minmax(8rem, 10rem) minmax(20rem, 1fr);\n          }\n        }\n      `}</style>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"grid gap-2 md-form-field-horiz grid-cols-1\">\n          <label htmlFor=\"form-postal\" className=\"form-label\">\n            <span className=\"form-label-main required\">郵便番号</span>\n          </label>\n          <div className=\"form-field-main\">\n            <input\n              id=\"form-postal\"\n              type=\"text\"\n              minLength={7}\n              maxLength={8}\n              pattern=\"\\d*\"\n              autoComplete=\"shipping postal-code\"\n              placeholder=\"郵便番号\"\n              className=\"form-field-elem w-28\"\n              {...register('postal', {\n                required: '郵便番号を入力してください',\n              })}\n            />\n          </div>\n\n          <label htmlFor=\"form-prefecture\" className=\"form-label\">\n            <span className=\"form-label-main required\">都道府県</span>\n          </label>\n          <div className=\"form-field-main\">\n            <div className=\"relative inline-block\">\n              <select\n                id=\"form-prefecture\"\n                autoComplete=\"shipping address-level1\"\n                className=\"form-field-elem w-28\"\n                {...register('prefecture', {\n                  required: '都道府県を入力してください',\n                })}\n              >\n                <option value=\"\">(選択)</option>\n                <option value=\"01\">北海道</option>\n                <option value=\"02\">青森県</option>\n                <option value=\"03\">岩手県</option>\n                <option value=\"04\">宮城県</option>\n                <option value=\"05\">秋田県</option>\n                <option value=\"06\">山形県</option>\n                <option value=\"07\">福島県</option>\n                <option value=\"08\">茨城県</option>\n                <option value=\"09\">栃木県</option>\n                <option value=\"10\">群馬県</option>\n                <option value=\"11\">埼玉県</option>\n                <option value=\"12\">千葉県</option>\n                <option value=\"13\">東京都</option>\n                <option value=\"14\">神奈川県</option>\n                <option value=\"15\">新潟県</option>\n                <option value=\"16\">富山県</option>\n                <option value=\"17\">石川県</option>\n                <option value=\"18\">福井県</option>\n                <option value=\"19\">山梨県</option>\n                <option value=\"20\">長野県</option>\n                <option value=\"21\">岐阜県</option>\n                <option value=\"22\">静岡県</option>\n                <option value=\"23\">愛知県</option>\n                <option value=\"24\">三重県</option>\n                <option value=\"25\">滋賀県</option>\n                <option value=\"26\">京都府</option>\n                <option value=\"27\">大阪府</option>\n                <option value=\"28\">兵庫県</option>\n                <option value=\"29\">奈良県</option>\n                <option value=\"30\">和歌山県</option>\n                <option value=\"31\">鳥取県</option>\n                <option value=\"32\">島根県</option>\n                <option value=\"33\">岡山県</option>\n                <option value=\"34\">広島県</option>\n                <option value=\"35\">山口県</option>\n                <option value=\"36\">徳島県</option>\n                <option value=\"37\">香川県</option>\n                <option value=\"38\">愛媛県</option>\n                <option value=\"39\">高知県</option>\n                <option value=\"40\">福岡県</option>\n                <option value=\"41\">佐賀県</option>\n                <option value=\"42\">長崎県</option>\n                <option value=\"43\">熊本県</option>\n                <option value=\"44\">大分県</option>\n                <option value=\"45\">宮崎県</option>\n                <option value=\"46\">鹿児島県</option>\n                <option value=\"47\">沖縄県</option>\n              </select>\n              {timerRunning && (\n                <Indicator className=\"absolute -top-1 -right-1\" />\n              )}\n            </div>\n          </div>\n\n          <label htmlFor=\"form-city\" className=\"form-label nogap\">\n            <span className=\"form-label-main required\">市区町村</span>\n            <span className=\"form-label-aux\">(例: 川崎市川崎区)</span>\n          </label>\n          <div className=\"form-field-main\">\n            <div className=\"relative inline-block\">\n              <input\n                id=\"form-city\"\n                type=\"text\"\n                autoComplete=\"shipping address-level2\"\n                placeholder=\"市区町村\"\n                className=\"form-field-elem md:w-52 w-full\"\n                {...register('city', {\n                  required: '市区町村を入力してください',\n                })}\n              />\n              {timerRunning && (\n                <Indicator className=\"absolute -top-1 -right-1\" />\n              )}\n            </div>\n          </div>\n\n          <label htmlFor=\"form-address1\" className=\"form-label nogap\">\n            <span className=\"form-label-main required\">町域・番地</span>\n            <span className=\"form-label-aux\">(例: 旭町1-1)</span>\n          </label>\n          <div className=\"form-field-main\">\n            <div className=\"relative inline-block\">\n              <input\n                id=\"form-address1\"\n                type=\"text\"\n                autoComplete=\"shipping address-line1\"\n                placeholder=\"町域・番地\"\n                className=\"form-field-elem md:w-52 w-full\"\n                {...register('address1', {\n                  required: '町域・番地を入力してください',\n                })}\n              />\n              {timerRunning && (\n                <Indicator className=\"absolute -top-1 -right-1\" />\n              )}\n            </div>\n          </div>\n\n          <label htmlFor=\"form-address2\" className=\"form-label nogap\">\n            <span className=\"form-label-main\">建物名など</span>\n            <span className=\"form-label-aux\">(例: ○○マンション101号)</span>\n          </label>\n          <div className=\"form-field-main\">\n            <div className=\"relative inline-block\">\n              <input\n                id=\"form-address2\"\n                type=\"text\"\n                autoComplete=\"shipping address-line2\"\n                placeholder=\"建物名など\"\n                className=\"form-field-elem w-full\"\n                {...register('address2')}\n              />\n              {timerRunning && (\n                <Indicator className=\"absolute -top-1 -right-1\" />\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-6 flex md:flex-row md:max-w-xl flex-col space-y-2 md:space-y-0 md:space-x-2\">\n          <button\n            type=\"reset\"\n            className=\"rounded-md bg-gray-300 p-2 flex flex-1 justify-center item-center\"\n            onClick={() => reset()}\n          >\n            <span>フォームをリセットする</span>\n          </button>\n          <button\n            type=\"submit\"\n            className=\"rounded-md bg-gray-300 p-2 flex flex-1 justify-center item-center\"\n          >\n            <span>Submit (実際には何も起こりません)</span>\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nconst Lookup: React.FunctionComponent = () => {\n  return (\n    <section className=\"flex flex-col\">\n      <header className=\"flex-1 align-center\">\n        <h1 className=\"mb-5 text-3xl font-bold text-gray-500\">\n          郵便番号正引き検索\n        </h1>\n      </header>\n      <main className=\"flex-1\">\n        <Form />\n      </main>\n    </section>\n  );\n};\n\nexport default Lookup;\n","import { KENALL } from '@ken-all/kenall';\n\nconst apiBaseUrl = process.env.REACT_APP_KENALL_API_BASE_URL;\nconst api = new KENALL(process.env.REACT_APP_KENALL_API_KEY as string, {\n  apibase: apiBaseUrl,\n  timeout: 10000,\n});\n\nexport { api };\n","import React from 'react';\nimport Autosuggest, {\n  OnSuggestionSelected,\n  RenderSuggestionsContainer,\n} from 'react-autosuggest';\nimport { Address, AddressSearcherOptions } from '@ken-all/kenall';\nimport { api } from '../kenall';\n\ntype Candidates = {\n  count: number;\n  data: Address[];\n};\n\nconst SENTINEL: Address = {\n  jisx0402: '',\n  old_code: '',\n  postal_code: '',\n  prefecture: '',\n  prefecture_kana: '',\n  city: '',\n  city_kana: '',\n  town: '',\n  town_kana: '',\n  town_raw: '',\n  town_kana_raw: '',\n  koaza: '',\n  kyoto_street: '',\n  building: '',\n  floor: '',\n  town_partial: false,\n  town_addressed_koaza: false,\n  town_multi: false,\n  town_chome: false,\n  corporation: null,\n};\n\ntype AddressSearcher = (options: AddressSearcherOptions) => Promise<Candidates>;\n\nconst searchAddresses: AddressSearcher = (() => {\n  const cache: { [k: string]: Candidates } = {};\n  const generateKeyFromOptions = (options: AddressSearcherOptions): string =>\n    `${options.query}:${options.limit}`;\n  return async (options: AddressSearcherOptions) => {\n    const k = generateKeyFromOptions(options);\n    let candidates: Candidates | undefined = cache[k];\n    if (candidates === undefined) {\n      candidates = await api.searchAddresses(options);\n      cache[k] = candidates;\n    }\n    return candidates;\n  };\n})();\n\nconst ReverseLookup: React.FunctionComponent = () => {\n  const [address, setAddress] = React.useState<string>('');\n  const [candidates, setCandidates] = React.useState<\n    Candidates | Error | undefined\n  >(undefined);\n\n  const onCandidatesRequested = async ({\n    value: address,\n  }: {\n    value: string;\n  }) => {\n    setAddress(address);\n    if (!address) {\n      setCandidates(undefined);\n      return;\n    }\n    try {\n      const result = await searchAddresses({\n        query: address,\n        limit: 20,\n      });\n      setCandidates(result);\n    } catch (e) {\n      setCandidates(e as Error);\n    }\n  };\n\n  const onCandidatesClearRequested = () => {\n    setCandidates(undefined);\n  };\n\n  const onCandidateSelected: OnSuggestionSelected<Address> = (\n    e,\n    { suggestionValue }\n  ) => {\n    setAddress(suggestionValue);\n  };\n\n  const renderCandidate = (candidate: Address) => (\n    <>\n      <span className=\"text-base font-mono w-24 flex-shrink-0\">\n        〒{candidate.postal_code.substring(0, 3)}-\n        {candidate.postal_code.substring(3)}\n      </span>\n      <span className=\"text-sm ml-2\">\n        {candidate.prefecture}\n        {candidate.city}\n        {candidate.town} {candidate.kyoto_street}\n        {candidate.koaza}\n        {candidate?.corporation?.block_lot}\n        {candidate.building}\n        {candidate.floor}\n      </span>\n    </>\n  );\n\n  const renderCandidatesContainer: RenderSuggestionsContainer = ({\n    containerProps,\n    children,\n  }) => {\n    const { ref, className, ...restOfContainerProps } = containerProps;\n    return (\n      <div\n        {...restOfContainerProps}\n        className={`${className} divide-y divide-gray-200 divide-solid`}\n      >\n        {candidates !== undefined &&\n          (candidates instanceof Error ? (\n            <div ref={ref}>\n              <ul className=\"react-autosuggest__suggestions-list\">\n                <li className=\"react-autosuggest__suggestion\">\n                  <span className=\"text-base text-red-300 mr-2\">\n                    取得時にエラーが発生しました\n                  </span>\n                  <span className=\"text-sm text-red-200\">\n                    {candidates.message}\n                  </span>\n                </li>\n              </ul>\n            </div>\n          ) : (\n            <>\n              <div className=\"overflow-y-scroll max-h-48\" ref={ref}>\n                {children}\n              </div>\n              <div className=\"text-sm text-gray-400 py-1 px-4 flex flex-row justify-end\">\n                <div>{String(candidates.count)}件</div>\n              </div>\n            </>\n          ))}\n      </div>\n    );\n  };\n\n  return (\n    <section className=\"flex flex-col\">\n      <style jsx global>{`\n        .react-autosuggest__container {\n          @apply relative;\n        }\n\n        .react-autosuggest__input {\n          @apply text-lg p-2 m-0 w-full rounded-md border border-gray-200;\n        }\n\n        .react-autosuggest__input--focused {\n          @apply focus:outline-none;\n        }\n\n        .react-autosuggest__input--open {\n        }\n\n        .react-autosuggest__suggestions-container {\n          @apply absolute z-10 hidden rounded-md border border-gray-200;\n        }\n\n        .react-autosuggest__suggestions-container--open {\n          @apply block;\n        }\n\n        .react-autosuggest__suggestions-list {\n          @apply m-0 p-0;\n        }\n\n        .react-autosuggest__suggestion {\n          @apply cursor-pointer py-2 px-4 flex flex-row flex-nowrap items-baseline;\n        }\n\n        .react-autosuggest__suggestion--highlighted {\n          @apply bg-blue-100;\n        }\n\n        .container {\n          @apply flex;\n        }\n      `}</style>\n      <header className=\"flex-1 align-center\">\n        <h1 className=\"mb-5 text-3xl font-bold text-gray-500\">\n          郵便番号逆引き検索\n        </h1>\n      </header>\n      <main className=\"flex-1\">\n        <div>\n          <div className=\"mb-2\">\n            <label>住所を入力</label>\n            <p>\n              例: <span className=\"bg-gray-200 p-1 mr-1\">愛知県</span>{' '}\n              <span className=\"bg-gray-200 p-1 mr-1\">横浜市 港北区</span>\n            </p>\n          </div>\n          <div className=\"text-lg w-full md:w-9/12\">\n            <Autosuggest\n              suggestions={\n                candidates !== undefined && !(candidates instanceof Error)\n                  ? candidates.data\n                  : [SENTINEL]\n              }\n              onSuggestionsFetchRequested={onCandidatesRequested}\n              onSuggestionsClearRequested={onCandidatesClearRequested}\n              onSuggestionSelected={onCandidateSelected}\n              getSuggestionValue={(candidate) =>\n                `${candidate.prefecture}${candidate.city}${candidate.town} ${\n                  candidate.kyoto_street || ''\n                }${candidate.koaza || ''}${\n                  candidate?.corporation?.block_lot || ''\n                }${candidate.building || ''}${candidate.floor || ''}`\n              }\n              renderSuggestion={renderCandidate}\n              renderSuggestionsContainer={renderCandidatesContainer}\n              inputProps={{\n                placeholder: '住所を入力',\n                value: address,\n                onChange: (e) => {\n                  const value = (e.currentTarget as HTMLInputElement).value;\n                  if (typeof value === 'string') {\n                    setAddress((e.currentTarget as HTMLInputElement).value);\n                  }\n                },\n              }}\n            />\n          </div>\n        </div>\n      </main>\n    </section>\n  );\n};\n\nexport default ReverseLookup;\n","import React from 'react';\n\nexport type BrowserConfig = {\n  scrollbarWidth: number;\n};\n\nexport const BrowserConfigContext = React.createContext<BrowserConfig>({\n  scrollbarWidth: 0,\n});\n","import {\n  KENALL,\n  NTACorporateInfo,\n  NTACorporateInfoSearcherOptions,\n  NTACorporateInfoSearchMode,\n} from '@ken-all/kenall';\nimport React from 'react';\nimport { FixedSizeList } from 'react-window';\nimport { useTable, useAbsoluteLayout } from 'react-table';\nimport { useForm } from 'react-hook-form';\nimport { api } from '../kenall';\nimport { BrowserConfigContext } from '../context';\nimport CloseIcon from '@mui/icons-material/Cancel';\nimport FilterIcon from '@mui/icons-material/Filter';\n\ntype OptionPair = {\n  value: string;\n  text: string;\n};\n\nconst prefectures: OptionPair[] = [\n  { value: '北海道', text: '北海道' },\n  { value: '青森県', text: '青森県' },\n  { value: '岩手県', text: '岩手県' },\n  { value: '宮城県', text: '宮城県' },\n  { value: '秋田県', text: '秋田県' },\n  { value: '山形県', text: '山形県' },\n  { value: '福島県', text: '福島県' },\n  { value: '茨城県', text: '茨城県' },\n  { value: '栃木県', text: '栃木県' },\n  { value: '群馬県', text: '群馬県' },\n  { value: '埼玉県', text: '埼玉県' },\n  { value: '千葉県', text: '千葉県' },\n  { value: '東京都', text: '東京都' },\n  { value: '神奈川県', text: '神奈川県' },\n  { value: '新潟県', text: '新潟県' },\n  { value: '富山県', text: '富山県' },\n  { value: '石川県', text: '石川県' },\n  { value: '福井県', text: '福井県' },\n  { value: '山梨県', text: '山梨県' },\n  { value: '長野県', text: '長野県' },\n  { value: '岐阜県', text: '岐阜県' },\n  { value: '静岡県', text: '静岡県' },\n  { value: '愛知県', text: '愛知県' },\n  { value: '三重県', text: '三重県' },\n  { value: '滋賀県', text: '滋賀県' },\n  { value: '京都府', text: '京都府' },\n  { value: '大阪府', text: '大阪府' },\n  { value: '兵庫県', text: '兵庫県' },\n  { value: '奈良県', text: '奈良県' },\n  { value: '和歌山県', text: '和歌山県' },\n  { value: '鳥取県', text: '鳥取県' },\n  { value: '島根県', text: '島根県' },\n  { value: '岡山県', text: '岡山県' },\n  { value: '広島県', text: '広島県' },\n  { value: '山口県', text: '山口県' },\n  { value: '徳島県', text: '徳島県' },\n  { value: '香川県', text: '香川県' },\n  { value: '愛媛県', text: '愛媛県' },\n  { value: '高知県', text: '高知県' },\n  { value: '福岡県', text: '福岡県' },\n  { value: '佐賀県', text: '佐賀県' },\n  { value: '長崎県', text: '長崎県' },\n  { value: '熊本県', text: '熊本県' },\n  { value: '大分県', text: '大分県' },\n  { value: '宮崎県', text: '宮崎県' },\n  { value: '鹿児島県', text: '鹿児島県' },\n  { value: '沖縄県', text: '沖縄県' },\n];\n\nconst kinds: OptionPair[] = [\n  { value: '101', text: '行政機関など' },\n  { value: '201', text: '地方公共団体' },\n  { value: '301', text: '株式会社' },\n  { value: '302', text: '有限会社' },\n  { value: '303', text: '合名会社' },\n  { value: '304', text: '合資会社' },\n  { value: '305', text: '合同会社' },\n  { value: '399', text: 'その他の設立登記法人' },\n  { value: '401', text: '外国会社等' },\n  { value: '499', text: 'その他' },\n];\n\nconst modes: OptionPair[] = [\n  { value: 'partial', text: '部分一致' },\n  { value: 'exact', text: '完全一致' },\n];\n\nclass NTACorporateInfoChunk {\n  constructor(\n    public offset: number,\n    public length: number,\n    public data: Promise<NTACorporateInfo[] | undefined>\n  ) {}\n\n  pointedBy(\n    i: number\n  ): [number, Promise<NTACorporateInfo | undefined> | undefined] {\n    if (i < this.offset) {\n      return [-1, undefined];\n    } else if (i >= this.offset + this.length) {\n      return [1, undefined];\n    } else {\n      return [0, this.data.then((data) => data && data[i - this.offset])];\n    }\n  }\n}\n\nclass VirtualizedSearchResult {\n  lru: number[] = [];\n  sorted: NTACorporateInfoChunk[] = [];\n  options: NTACorporateInfoSearcherOptions;\n  private _count: Promise<number> | undefined = undefined;\n  private cancelables = new WeakMap<\n    Promise<NTACorporateInfo | undefined>,\n    Promise<NTACorporateInfo | undefined>\n  >();\n  private canceled = false;\n\n  constructor(\n    private api: KENALL,\n    options: NTACorporateInfoSearcherOptions,\n    private cacheSize: number\n  ) {\n    this.options = {\n      limit: 30,\n      ...options,\n    };\n  }\n\n  private purge(chunk: NTACorporateInfoChunk): boolean {\n    const ci = this.sorted.findIndex((item) => item === chunk);\n    if (ci < 0) {\n      return false;\n    }\n    for (let i = 0; i < this.lru.length; ) {\n      if (this.lru[i] === ci) {\n        this.lru.splice(i, 1);\n        continue;\n      }\n      if (this.lru[i] > ci) {\n        --this.lru[i];\n      }\n      ++i;\n    }\n    this.sorted.splice(ci, 1);\n    return true;\n  }\n\n  cancelAll() {\n    this.canceled = true;\n  }\n\n  private makeCancelable(\n    p: Promise<NTACorporateInfo | undefined>\n  ): Promise<NTACorporateInfo | undefined> {\n    let cancelable = this.cancelables.get(p);\n    if (cancelable === undefined) {\n      cancelable = new Promise((resolve, reject) => {\n        this.cancelables.delete(p);\n        if (this.canceled) {\n          return undefined;\n        }\n        p.then(resolve, reject);\n      });\n      this.cancelables.set(p, cancelable);\n    }\n    return cancelable;\n  }\n\n  async count(): Promise<number> {\n    if (this._count === undefined) {\n      const respP = this.api.searchNTACorporateInfo(this.options);\n      const chunk: NTACorporateInfoChunk = new NTACorporateInfoChunk(\n        0,\n        this.options.limit as number,\n        respP.then(\n          (resp) => resp.data,\n          () => {\n            this.purge(chunk);\n            return undefined;\n          }\n        )\n      );\n      this.sorted.push(chunk);\n      this.lru.push(0);\n      this._count = respP.then(\n        (resp) => resp.count,\n        () => 0\n      );\n    }\n    return await this._count;\n  }\n\n  async get(i: number): Promise<NTACorporateInfo | undefined> {\n    if (i >= (await this.count())) {\n      return undefined;\n    }\n    if (this.lru.length > 0) {\n      const itemP = this.sorted[this.lru[0]].pointedBy(i)[1];\n      if (itemP !== undefined) {\n        return this.makeCancelable(itemP);\n      }\n    }\n    {\n      let s = 0,\n        e = this.sorted.length,\n        j = 0;\n      while (s < e && s < this.sorted.length) {\n        j = ((s + e) / 2) | 0;\n        const chunk = this.sorted[j];\n        const [d, itemP] = chunk.pointedBy(i);\n        switch (d) {\n          case 0:\n            return itemP;\n          case -1:\n            e = j;\n            break;\n          case 1:\n            ++j;\n            s = j;\n            break;\n        }\n      }\n      const limit = this.options.limit as number;\n      const chunkOffset = ((i / limit) | 0) * limit;\n      const respP = this.api.searchNTACorporateInfo({\n        ...this.options,\n        offset: chunkOffset,\n      });\n      const chunk = new NTACorporateInfoChunk(\n        chunkOffset,\n        limit,\n        respP.then(\n          (resp) => resp.data,\n          () => {\n            this.purge(chunk);\n            return undefined;\n          }\n        )\n      );\n      for (let i = 0; i < this.lru.length; ++i) {\n        if (this.lru[i] >= j) {\n          ++this.lru[i];\n        }\n      }\n      this.lru.unshift(j);\n      this.sorted.splice(j, 0, chunk);\n      if (this.lru.length > this.cacheSize) {\n        const ci = this.lru.pop() as number;\n        for (let i = 0; i < this.lru.length; ++i) {\n          if (this.lru[i] > ci) {\n            --this.lru[i];\n          }\n        }\n        this.sorted.splice(ci, 1);\n      }\n      {\n        const itemP = chunk.pointedBy(i)[1];\n        return itemP && this.makeCancelable(itemP);\n      }\n    }\n  }\n}\n\ntype SearchParams = {\n  corporateName: string | undefined;\n  prefecture?: string;\n  kind?: string;\n  mode?: NTACorporateInfoSearchMode;\n};\n\nconst buildSearchArgs = (\n  params: SearchParams\n): NTACorporateInfoSearcherOptions => {\n  let query = `(name:${params.corporateName} OR furigana:${params.corporateName})`;\n  query += params.prefecture ? ` AND prefecture_name:${params.prefecture}` : '';\n  query += params.kind ? ` AND _facet_kind:/${kindsMap.get(params.kind)}` : '';\n  const mode = params.mode ? params.mode : 'partial';\n  return { query: query, mode: mode };\n};\n\nconst kindsMap = new Map<string, string>(\n  kinds.map(({ value, text }) => [value, text])\n);\n\nconst makeAccessor = <T extends keyof NTACorporateInfo>(\n  propName: T\n): ((\n  recP: () => Promise<NTACorporateInfo | undefined>\n) => () => Promise<NTACorporateInfo[T] | undefined>) => {\n  return (recP) => () =>\n    recP().then((rec) => (rec !== undefined ? rec[propName] : undefined));\n};\n\nconst columns = [\n  {\n    Header: '法人名',\n    id: 'name',\n    accessor: makeAccessor('name'),\n    width: 300,\n    minWidth: 300,\n  },\n  {\n    Header: '都道府県',\n    id: 'prefecture_name',\n    accessor: makeAccessor('prefecture_name'),\n    width: 80,\n    minWidth: 80,\n  },\n  {\n    Header: '市区町村',\n    id: 'city_name',\n    accessor: makeAccessor('city_name'),\n    width: 120,\n    minWidth: 120,\n  },\n  {\n    Header: '市区町村以下の住所',\n    id: 'street_number',\n    accessor: makeAccessor('street_number'),\n    width: 500,\n    minWidth: 500,\n  },\n];\n\nconst defaultColumn = {\n  Cell: ({ value }: { value: () => Promise<string> }): React.ReactNode => {\n    const [resolvedValue, setResolvedValue] = React.useState<\n      string | undefined\n    >(undefined);\n    React.useEffect(() => {\n      value().then((resolved) => {\n        setResolvedValue(resolved);\n      });\n    }, [value]);\n    return (\n      resolvedValue || (\n        <div className=\"inline-block align-baseline bg-gray-200 w-32 h-3\"></div>\n      )\n    );\n  },\n};\n\ntype ReadyState = 0 | 1;\n\nconst SearchResultTable: React.FunctionComponent<{\n  options: NTACorporateInfoSearcherOptions;\n  height: number;\n  onSelect?: (rec: NTACorporateInfo) => void;\n  onReadyStateChange?: (state: ReadyState) => void;\n}> = ({ options, height, onSelect, onReadyStateChange }) => {\n  const { scrollbarWidth } = React.useContext(BrowserConfigContext);\n  type RowPromiseInitiator = () => Promise<NTACorporateInfo | undefined>;\n  const [data, setData] = React.useState<\n    [number | undefined, RowPromiseInitiator[]]\n  >([undefined, []]);\n  const listRef = React.useRef<FixedSizeList>(null);\n\n  // performance improvement\n  const queue = React.useRef<{\n    fs: string[];\n    bags: Record<string, Array<() => void>>;\n    t: number | undefined;\n  }>({ fs: [], bags: {}, t: undefined });\n\n  const enqueue = (discriminator: any, f: () => void) => {\n    const bags = queue.current.bags;\n    const d = String(discriminator);\n    const bag: Array<() => void> | undefined = bags[d];\n    if (bag === undefined) {\n      queue.current.fs.push(d);\n      bags[d] = [f];\n    } else {\n      bag.push(f);\n    }\n    if (queue.current.t !== undefined) {\n      window.clearTimeout(queue.current.t);\n    }\n    queue.current.t = window.setTimeout(() => {\n      const fs = queue.current.fs;\n      const bags = queue.current.bags;\n      for (let i = Math.max(fs.length - 20, 0); i < fs.length; i++) {\n        bags[fs[i]].forEach((fn) => fn());\n      }\n      queue.current.t = undefined;\n      queue.current.fs = [];\n      queue.current.bags = {};\n    }, 500);\n  };\n\n  React.useEffect(() => {\n    let c = -1;\n    const vResult = new VirtualizedSearchResult(api, options, 100);\n\n    vResult.count().then((count) => {\n      const result: RowPromiseInitiator[] = [];\n\n      type Continuation = () => Continuation | undefined;\n\n      let continuation: Continuation | undefined = (() => {\n        const step = 10000;\n        const mf = (n: number) => () => {\n          const nn = Math.min(n + step, count);\n          for (let i = n; i < nn; i++) {\n            ((i) => {\n              result.push(\n                () =>\n                  new Promise<NTACorporateInfo | undefined>(\n                    (resolve, reject) => {\n                      enqueue(i, () => {\n                        vResult.get(i).then(resolve, reject);\n                      });\n                    }\n                  )\n              );\n            })(i);\n          }\n          setData([count, result]);\n          return nn < count ? mf(nn) : undefined;\n        };\n        return mf(0);\n      })();\n\n      continuation = continuation();\n      c = window.setInterval(() => {\n        if (continuation === undefined) {\n          window.clearInterval(c);\n        } else {\n          continuation = continuation();\n        }\n      }, 10000);\n\n      onReadyStateChange && onReadyStateChange(0);\n    });\n\n    if (listRef.current !== null) {\n      listRef.current.scrollTo(0);\n    }\n    setData([undefined, []]);\n\n    onReadyStateChange && onReadyStateChange(1);\n\n    return () => {\n      vResult.cancelAll();\n      if (c >= 0) {\n        window.clearInterval(c);\n      }\n      if (queue.current !== undefined && queue.current.t) {\n        window.clearTimeout(\n          queue.current.t\n        ); /* eslint \"react-hooks/exhaustive-deps\": \"off\" */\n        queue.current.t = undefined;\n        queue.current.fs = [];\n        queue.current.bags = {};\n      }\n    };\n  }, [options]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    totalColumnsWidth,\n    prepareRow,\n  } = useTable({ columns, data: data[1], defaultColumn }, useAbsoluteLayout);\n\n  const RenderRow = React.useCallback(\n    ({ index, style }) => {\n      const row = rows[index];\n      prepareRow(row);\n      return (\n        <div\n          {...row.getRowProps({\n            style: {\n              ...style,\n              minWidth: totalColumnsWidth,\n            },\n          })}\n          className={`modal-table-tr ${\n            index % 2 ? 'modal-table-row-odd' : 'modal-table-row-even'\n          }`}\n          onClick={\n            onSelect &&\n            (() => row.original().then((rec) => rec && onSelect(rec)))\n          }\n        >\n          {row.cells.map((cell) => {\n            return (\n              // eslint-disable-next-line react/jsx-key\n              <div {...cell.getCellProps()} className=\"modal-table-td\">\n                {cell.render('Cell')}\n              </div>\n            );\n          })}\n        </div>\n      );\n    },\n    [prepareRow, rows, height, onSelect, totalColumnsWidth]\n  );\n\n  const rowContainerRef = React.useRef<HTMLDivElement>(null);\n  const innerRef = React.useCallback((elem) => {\n    if (!elem) return;\n    elem.parentNode.addEventListener(\n      'scroll',\n      () => {\n        if (rowContainerRef.current != null) {\n          rowContainerRef.current.scrollLeft = elem.parentNode.scrollLeft;\n        }\n      },\n      false\n    );\n  }, []);\n\n  return (\n    <>\n      <div {...getTableProps()} className=\"modal-table\">\n        <div className=\"modal-table-thead\">\n          {headerGroups.map((headerGroup, i) => (\n            <div\n              key={i}\n              style={{ width: '100%', overflow: 'hidden' }}\n              ref={rowContainerRef}\n            >\n              <div\n                {...headerGroup.getHeaderGroupProps({\n                  style: {\n                    width: totalColumnsWidth + scrollbarWidth,\n                  },\n                })}\n                className=\"modal-table-tr\"\n              >\n                {headerGroup.headers.map((column) => (\n                  // eslint-disable-next-line react/jsx-key\n                  <div {...column.getHeaderProps()} className=\"modal-table-th\">\n                    {column.render('Header')}\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div\n          {...getTableBodyProps({\n            style: {\n              width: '100%',\n            },\n          })}\n          className=\"modal-table-tbody\"\n        >\n          <FixedSizeList\n            height={height - 64}\n            itemCount={rows.length}\n            itemSize={32}\n            width=\"100%\"\n            innerRef={innerRef}\n            ref={listRef}\n          >\n            {RenderRow}\n          </FixedSizeList>\n        </div>\n\n        <div className=\"modal-table-footer\">\n          {data[0] !== undefined ? `${data[0]}件見つかりました` : ''}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst Modal: React.FunctionComponent<{\n  showFlag: boolean | undefined;\n  defaultParams: SearchParams | undefined;\n  onCloseButtonClick?: React.MouseEventHandler;\n  onSelect?: (rec: NTACorporateInfo) => void;\n}> = ({ showFlag, defaultParams, onCloseButtonClick, onSelect }) => {\n  const [options, setOptions] = React.useState<\n    NTACorporateInfoSearcherOptions | undefined\n  >();\n  const onSubmit = (d: SearchParams) => {\n    setOptions(buildSearchArgs(d));\n  };\n  const [disabled, setDisabled] = React.useState<boolean>(false);\n  const onReadyStateChange = (state: ReadyState) => {\n    switch (state) {\n      case 0:\n        setDisabled(false);\n        break;\n      case 1:\n        setDisabled(true);\n    }\n  };\n\n  const { register, handleSubmit, reset } = useForm<SearchParams>();\n\n  const Select: React.FunctionComponent<\n    {\n      options: { value: string; text: string }[];\n      placeholder?: string;\n      className?: string;\n    } & React.RefAttributes<HTMLSelectElement> &\n      React.SelectHTMLAttributes<HTMLSelectElement>\n  > = React.forwardRef(\n    ({ options, placeholder, className, ...params }, ref) => {\n      return (\n        <select\n          className={`border-0 rounded-md text-gray-600 pl-2 pr-8 text-sm ${className}`}\n          ref={ref}\n          {...params}\n        >\n          {placeholder && <option value=\"\">{placeholder}</option>}\n          {options.map(({ value, text }, i) => (\n            <option value={value} key={i}>\n              {text}\n            </option>\n          ))}\n        </select>\n      );\n    }\n  );\n\n  const [searchResultTableHeight, setSearchResultTableHeight] =\n    React.useState<number>(48);\n\n  const outerRef = React.useRef<HTMLDivElement>(null);\n  React.useEffect(() => {\n    if (showFlag && outerRef.current !== null) {\n      const elem = outerRef.current;\n      const doSetHeight = () => {\n        const outerElemBounds = elem.getBoundingClientRect();\n        setSearchResultTableHeight(outerElemBounds.height);\n      };\n      const ob = new ResizeObserver(doSetHeight);\n      ob.observe(outerRef.current);\n      doSetHeight();\n\n      if (defaultParams !== undefined) {\n        reset(defaultParams);\n      }\n    }\n    setOptions(undefined);\n  }, [showFlag]);\n\n  return (\n    <div\n      className={`fixed top-12 md:top-0 left-0 right-0 bottom-12 md:bottom-0 flex align-center justify-center ${\n        !showFlag && 'hidden'\n      }`}\n    >\n      <style jsx>{`\n        button.bg-gray-300:disabled {\n          @apply bg-gray-400;\n        }\n      `}</style>\n      <div className=\"bg-gray-500 bg-opacity-75 rounded-md w-full md:w-5/6 lg:w-3/4 md:h-1/2 h-full m-4 md:m-auto p-4 relative\">\n        <div className=\"absolute right-0 -top-5\">\n          <button onClick={onCloseButtonClick}>\n            <CloseIcon sx={{ width: '1.5rem', height: '1.5rem' }} />\n          </button>\n        </div>\n        <div className=\"flex flex-col w-full h-full\">\n          <form\n            className=\"flex flex-col w-full sm:w-auto\"\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <div className=\"flex flex-col\">\n              <div>\n                <input\n                  className=\"border-0 rounded-md px-2 leading-8 form-input-text w-full\"\n                  type=\"text\"\n                  placeholder=\"法人名で検索(例: オープンコレクター)\"\n                  disabled={disabled}\n                  {...register('corporateName')}\n                ></input>\n              </div>\n              <div className=\"flex flex-row flex-wrap -mr-1\">\n                <div className=\"mt-1 mr-1\">\n                  <Select\n                    options={prefectures}\n                    placeholder=\"(全都道府県)\"\n                    disabled={disabled}\n                    {...register('prefecture')}\n                  />\n                </div>\n                <div className=\"mt-1 mr-1 flex-auto\">\n                  <Select\n                    options={kinds}\n                    placeholder=\"(全種別)\"\n                    disabled={disabled}\n                    className=\"w-full\"\n                    {...register('kind')}\n                  />\n                </div>\n                <div className=\"mt-1 mr-1 flex-auto\">\n                  <Select\n                    options={modes}\n                    disabled={disabled}\n                    className=\"w-full\"\n                    {...register('mode')}\n                  />\n                </div>\n                <div className=\"mt-1 mr-1 flex-auto basis-full\">\n                  <button\n                    type=\"submit\"\n                    className=\"rounded-md bg-gray-300 p-2 w-full whitespace-nowrap text-sm\"\n                    disabled={disabled}\n                  >\n                    検索\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n          <div className=\"flex-1 mt-1 overflow-hidden\" ref={outerRef}>\n            {options && showFlag && (\n              <SearchResultTable\n                options={options}\n                height={searchResultTableHeight}\n                onSelect={onSelect}\n                onReadyStateChange={onReadyStateChange}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst TextField: React.FunctionComponent<\n  {\n    label: string;\n    elemClassName?: string;\n  } & React.RefAttributes<HTMLInputElement> &\n    React.InputHTMLAttributes<HTMLInputElement>\n> = React.forwardRef(\n  ({ children, label, name, elemClassName, ...params }, ref) => {\n    const id = `form-${name}`;\n    return (\n      <>\n        <label className=\"form-label\" htmlFor={id}>\n          <span className=\"form-label-main\">{label}</span>\n        </label>\n        <div className=\"form-field-main\">\n          <input\n            key={name}\n            id={id}\n            type=\"text\"\n            className={`form-field-elem ${elemClassName}`}\n            name={name}\n            ref={ref}\n            {...params}\n          />\n          {children}\n        </div>\n      </>\n    );\n  }\n);\n\nconst SelectField: React.FunctionComponent<\n  {\n    label: string;\n    placeholder?: string;\n    elemClassName?: string;\n    options: OptionPair[];\n  } & React.RefAttributes<HTMLSelectElement> &\n    React.SelectHTMLAttributes<HTMLSelectElement>\n> = React.forwardRef(\n  ({ label, name, placeholder, elemClassName, options, ...params }, ref) => {\n    const id = `form-${name}`;\n    return (\n      <>\n        <label className=\"form-label\" htmlFor={id}>\n          <span className=\"form-label-main\">{label}</span>\n        </label>\n        <div className=\"form-field-main\">\n          <select\n            key={name}\n            id={id}\n            className={`form-field-elem ${elemClassName}`}\n            name={name}\n            ref={ref}\n            {...params}\n          >\n            {placeholder && <option value=\"\">{placeholder}</option>}\n            {options.map(({ value, text }, i) => (\n              <option value={value} key={i}>\n                {text}\n              </option>\n            ))}\n          </select>\n        </div>\n      </>\n    );\n  }\n);\n\ntype HoujinbangouForm = {\n  corporateName: string;\n  corporateNumber: string;\n  postalCode: string;\n  prefecture: string;\n  city: string;\n  address1: string;\n  address2: string;\n};\n\nconst Houjinbangou: React.FunctionComponent = () => {\n  const { register, getValues, setValue } = useForm<HoujinbangouForm>();\n  const [searchParams, setSearchParams] = React.useState<\n    SearchParams | undefined\n  >(undefined);\n  const [showModalFlag, setShowModalFlag] = React.useState<boolean | undefined>(\n    undefined\n  );\n  const onOpenModalButtonClick: React.MouseEventHandler = (e) => {\n    e.preventDefault();\n    const values = getValues();\n    setSearchParams({\n      corporateName: values.corporateName,\n      prefecture: values.prefecture,\n    });\n    setShowModalFlag(true);\n  };\n\n  const onCorporateSelect = (rec: NTACorporateInfo) => {\n    setShowModalFlag(false);\n    setValue('corporateName', rec.name);\n    setValue('corporateNumber', rec.corporate_number);\n    setValue('postalCode', rec.post_code || '');\n    setValue('prefecture', rec.prefecture_name || '');\n    setValue('city', rec.city_name || '');\n    setValue('address1', rec.town ? rec.town + (rec.block_lot_num || '') : '');\n    setValue(\n      'address2',\n      (rec.building ? rec.building + ' ' : '') + (rec.floor_room || '')\n    );\n  };\n\n  return (\n    <>\n      <style jsx global>{`\n        .form-field-main {\n          @apply md:mb-0 mb-3 flex flex-row items-center;\n        }\n\n        .form-field-elem {\n          @apply border-gray-300 rounded-md;\n        }\n\n        .form-label {\n          @apply md:mt-2;\n        }\n\n        .form-label.nogap {\n          @apply md:mt-0;\n        }\n\n        .form-label-main {\n          display: block;\n        }\n\n        .form-label-main.required::after {\n          @apply text-gray-500 text-xs;\n          content: '*';\n          vertical-align: super;\n        }\n\n        .form-label-aux {\n          display: block;\n          @apply text-sm;\n        }\n\n        @media (min-width: 768px) {\n          .md-form-field-horiz {\n            grid-template-columns: minmax(8rem, 10rem) minmax(20rem, 1fr);\n          }\n        }\n\n        .modal-table-tr {\n          height: 32px;\n        }\n\n        .modal-table-thead {\n          height: 32px;\n          @apply bg-white border-b border-gray-300;\n        }\n\n        .modal-table-footer {\n          height: 32px;\n        }\n\n        .modal-table-td,\n        .modal-table-th {\n          @apply overflow-hidden whitespace-nowrap p-1;\n        }\n\n        .modal-table-tbody {\n          @apply bg-white;\n        }\n\n        .modal-table-tbody .modal-table-tr:hover {\n          @apply bg-gray-200 cursor-pointer;\n        }\n\n        .modal-table-tbody .modal-table-tr:active {\n          @apply bg-gray-400;\n        }\n\n        .modal-table-tbody .modal-table-row-odd {\n          @apply bg-gray-100;\n        }\n      `}</style>\n      <div className=\"flex flex-col\">\n        <h1 className=\"mb-5 text-3xl font-bold text-gray-500\">\n          法人番号API デモ: 法人住所入力フォーム\n        </h1>\n\n        <div className=\"my-2 flex flex-col w-full\">\n          <form>\n            <div className=\"grid gap-2 md-form-field-horiz grid-cols-1\">\n              <TextField\n                label=\"法人名\"\n                placeholder=\"法人名\"\n                {...register('corporateName')}\n                elemClassName=\"w-full sm:w-1/2\"\n              >\n                <button\n                  className=\"ml-2 rounded-md p-2 h-8 w-26 bg-gray-300 text-sm whitespace-nowrap flex flex-cols justify-center items-center\"\n                  onClick={onOpenModalButtonClick}\n                >\n                  <span>簡単入力</span>\n                  <FilterIcon\n                    fontSize=\"small\"\n                    viewBox=\"0 0 30 30\"\n                    sx={{ marginLeft: '4px' }}\n                  />\n                </button>\n              </TextField>\n              <TextField\n                label=\"法人番号\"\n                placeholder=\"法人番号\"\n                {...register('corporateNumber')}\n                minLength={13}\n                maxLength={14}\n                pattern=\"\\d*\"\n                elemClassName=\"w-40\"\n              />\n              <TextField\n                label=\"郵便番号\"\n                placeholder=\"郵便番号\"\n                {...register('postalCode')}\n                minLength={7}\n                maxLength={8}\n                pattern=\"\\d*\"\n                elemClassName=\"w-28\"\n              />\n              <SelectField\n                label=\"都道府県\"\n                placeholder=\"(都道府県)\"\n                {...register('prefecture')}\n                elemClassName=\"w-32\"\n                options={prefectures}\n              />\n              <TextField\n                label=\"市区町村\"\n                placeholder=\"市区町村\"\n                {...register('city')}\n                elemClassName=\"w-36\"\n              />\n              <TextField\n                label=\"町名・番地\"\n                placeholder=\"町名・番地\"\n                {...register('address1')}\n                elemClassName=\"w-full sm:w-1/2\"\n              />\n              <TextField\n                label=\"建物名など\"\n                placeholder=\"建物名など\"\n                {...register('address2')}\n                elemClassName=\"w-full sm:w-1/2\"\n              />\n            </div>\n          </form>\n        </div>\n\n        <Modal\n          showFlag={showModalFlag}\n          onCloseButtonClick={() => setShowModalFlag(false)}\n          onSelect={onCorporateSelect}\n          defaultParams={searchParams}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Houjinbangou;\n","import React from 'react';\nimport { Link, Routes, Route } from 'react-router-dom';\nimport Index from './pages/index';\nimport Lookup from './pages/lookup';\nimport ReverseLookup from './pages/reverse-lookup';\nimport Houjinbangou from './pages/houjinbangou';\n\nexport const App: React.FunctionComponent = () => {\n  const [menuShown, setMenuShown] = React.useState<boolean>(false);\n\n  return (\n    <div\n      className=\"flex flex-col md:flex-row overflow-hidden min-h-screen relative\"\n      onClick={(e) => {\n        e.stopPropagation();\n        setMenuShown(false);\n      }}\n    >\n      <aside className=\"md:h-none h-screen md:static absolute inset-0\">\n        <header className=\"bg-gray-200 md:bg-transparent h-15 md:h-none flex items-center\">\n          <h1 className=\"py-3 px-5 md:pt-5 text-lg flex-grow\">\n            <Link to=\"/\">ケンオール</Link>\n          </h1>\n          <button\n            className=\"block md:hidden px-2 py-1 m-2\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setMenuShown(!menuShown);\n            }}\n          >\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n                clipRule=\"evenodd\"\n              ></path>\n            </svg>\n          </button>\n        </header>\n        <ul\n          className={\n            'z-20 duration-500 transion-right md:transition-none bg-white md:bg-transparent md:block p-5 md:p-0 md:mx-5 md:my-0 absolute top-10 bottom-0 w-1/2 md:w-auto md:static md:right-auto ' +\n            (menuShown ? 'right-0' : '-right-full')\n          }\n        >\n          <li>\n            <Link to=\"/lookup\" className=\"text-gray-500 block\">\n              郵便番号正引き検索\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/reverse-lookup\" className=\"text-gray-500 block\">\n              郵便番号逆引き検索\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/houjinbangou\" className=\"text-gray-500 block\">\n              法人番号API\n            </Link>\n          </li>\n        </ul>\n      </aside>\n      <main className=\"z-10 md:flex-1 px-5 md:py-5 mt-16 md:m-0\">\n        <Routes>\n          <Route path=\"/lookup\" element={<Lookup />} />\n          <Route path=\"/reverse-lookup\" element={<ReverseLookup />} />\n          <Route path=\"/houjinbangou\" element={<Houjinbangou />} />\n          <Route path=\"/\" element={<Index />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { scrollbarWidth } from '@xobotyi/scrollbar-width';\nimport App from './App';\nimport './index.css';\nimport { BrowserConfigContext } from './context';\n\nconst baseUrl = process.env.REACT_APP_BASE_URL || '/';\n\nconst Root: React.FunctionComponent = () => {\n  const [_scrollbarWidth, setScrollbarWidth] = React.useState<number>(0);\n  React.useEffect(() => {\n    const w = scrollbarWidth();\n    if (w === undefined) {\n      document.addEventListener(\n        'DOMContentLoaded',\n        () => {\n          setScrollbarWidth(scrollbarWidth() || 0);\n        },\n        false\n      );\n    } else {\n      setScrollbarWidth(w);\n    }\n  }, []);\n  return (\n    <React.StrictMode>\n      <BrowserConfigContext.Provider\n        value={{ scrollbarWidth: _scrollbarWidth }}\n      >\n        <Router basename={baseUrl}>\n          <App />\n        </Router>\n      </BrowserConfigContext.Provider>\n    </React.StrictMode>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}